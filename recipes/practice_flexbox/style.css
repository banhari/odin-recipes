.flex-container {
  display: flex;
  background-color: plum;
  border: 4px solid pink;
  height: 200px;
  width: 408px;
  padding: 4px;
  column-gap: 8px;
  /* row-gap: 2px; */
  /* gap: 8px; */
    /* combination of column-gap & row-gap */
  /* flex-direction: row; */
  /* flex-wrap: wrap; */
  flex-flow: row wrap; 
    /* combination of flex-direction and flex-wrap*/
  justify-content: center;
    /* aligns the items on the main axis */
  align-items: flex-end;
    /* aligns the items on the cross axis */
    /* <align-content: center> will overwrite */
  align-content: space-around;
    /* controls space between flex lines on the cross axis */
    /* for this to work you need more height in container 
      than is requireed to display the items */
  
}

/* this selector selects all divs inside of .flex-container */
.flex-container div{
  background: peachpuff;
  border: 4px solid darkslategray;
  height: 50px;
  width: 50px;
  /* flex-grow: 1;  */
    /* causes the flex-items to fill the available space and will change depending on flex-direction */
  /* flex-shrink: 1;  */
    /* causes the flex-items to shrink to fit the available space and will change depending on flex-direction */
  /* flex: initial; */
    /* same as <flex: 0 1 auto> and resets the item to the initial values of flexbox */
  /* flex: none; */
    /* same as <flex: 0 0 auto> and items cannot grow/shrink, they will only adjust by basis */
}

.one {
  /* align-self: flex-start; */
    /* aligns an individual flex item on the cross axis */
  /* height: 100px; */
  /* width: 100px; */
  /* font-size: 50px; */
  /* flex-grow: 1; */
  /* flex-basis: 40%; */
  /* order: 3; */
}

.two {
  /* align-self: center; */
  /* flex-grow: 2; */
  /* order: 1; */
}

.three {
  /* align-self: center; */
  /* flex-basis: 0; */
  /* order: 2; */
}

.four {
  /* align-self: flex-end; */
  /* flex-shrink: 1; */
  /* order: 4; */
}

.seven {
  /* flex-grow: 1; */
  margin-right: auto;
    /* this allows you to break out an indiv item */
}

/* @media (min-width: 600px) {
  .four {
    order: 1;
  }
} */

